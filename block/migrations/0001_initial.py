# Generated by Django 2.2.7 on 2019-11-24 21:47
import json
import hashlib

from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


def initial_data(apps, schema_editor):
    Entity = apps.get_model("block", "Entity")
    issuer = Entity.objects.create(name="Issuer", entity_type="INTERNAL")
    Entity.objects.create(name="Sender", entity_type="INTERNAL")
    Entity.objects.create(name="Receiver", entity_type="INTERNAL")

    Tx = apps.get_model("block", "Tx")
    tx = Tx.objects.create(
        tx_type="PRIVATE",
        sender=issuer,
        recipient=issuer,
    )
    data = json.dumps({
        "id": tx.id,
        "sender": issuer.id,
        "recipient": issuer.id,
        "data": "transaction for genisys block"
    }, sort_keys=True)

    Block = apps.get_model("block", "Block")
    # header: version, block type, no transactions in block
    # 00 - genesis block (99 possible types)
    b = Block.objects.create(header="version 0.1,00,01", previous_hash="0", hash="0")
    key = hashlib.sha256()
    key.update(str(b.id).encode('utf-8'))
    key.update(str(b.created).encode('utf-8'))
    key.update(str(data).encode('utf-8'))
    key.update(str(b.previous_hash).encode('utf-8'))
    b.hash = key.hexdigest()
    b.save()

    key = hashlib.sha256()
    key.update(str(b.previous_hash).encode("utf-8"))
    key.update(str(b.hash).encode("utf-8"))
    tx_hash = key.hexdigest()

    tx.data = data
    tx.tx_hash = tx_hash
    tx.save()


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('header', models.CharField(max_length=256)),
                ('previous_hash', models.CharField(max_length=64)),
                ('hash', models.CharField(max_length=64)),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('entity_type', models.CharField(choices=[('INTERNAL', 'INTERNAL'), ('EXTERNAL', 'EXTERNAL')], max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Tx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('tx_type', models.CharField(choices=[('INTERNAL', 'INTERNAL'), ('EXTERNAL', 'EXTERNAL'), ('PRIVATE', 'PRIVATE')], max_length=16)),
                ('data', models.CharField(blank=True, max_length=4096, null=True)),
                ('tx_hash', models.CharField(blank=True, max_length=64, null=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='recipient', to='block.Entity')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sender', to='block.Entity')),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.RunPython(initial_data),
    ]
